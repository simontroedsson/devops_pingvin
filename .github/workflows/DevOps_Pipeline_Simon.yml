name: DevOps pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter version number'
        type: string 
      generate_logerror:
        description: 'Generate logfile on test-failure'
        required: true
        type: boolean
        default: false
      run_test_job:
        description: 'Run only the test job'
        required: True
        type: boolean
        default: false

permissions:
  contents: read

env:
  docker_username: ${{secrets.DOCKER_simon_USERNAME}}
  docker_password: ${{secrets.DOCKER_simon_PASSWORD}}
  API_KEY: ${{secrets.API_KEY}}
  version_number: ${{ github.event.inputs.version }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
   
    - name: Test with pytest
      id: test
      run: |
       python -m pytest > error_log.txt 
       cat error_log.txt
     
    - name: Genereate log-error artefact
      if: ${{ always() && (steps.test.outcome == 'failure' && github.event.inputs.generate_logerror == 'true') }}
      uses: actions/upload-artifact@v4
      with:
        name: Upload error log
        path: error_log.txt
    
  build_and_deploy_image:
    if: ${{ github.event.inputs.run_test_job == 'false' }}
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Log in to Docker Hub
      run: docker login -u $docker_username -p $docker_password
      
    - name: Build the Docker image
      run: docker build --build-arg API_KEY=$API_KEY -t $docker_username/weather_app:latest --file Dockerfile .

    - name: tag docker image
      run: docker tag weather_app" $docker_username/weather_app:$version_number"
      
    - name: Push image to dockerhub
      run: docker push $docker_username/weather_app:latest


    
